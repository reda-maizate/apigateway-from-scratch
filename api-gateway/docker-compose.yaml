version: '3.8'

services:
  db:
    build:
      context: .
      dockerfile: Dockerfile-db
    environment:
      DB_USERNAME: admin
      DB_PASSWORD: postgres
      DB_NAME: apigateway
      DB_PORT: 5432
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -q" ]
      interval: 3s
      timeout: 5s
      retries: 5

  api_gateway:
    build:
      context: .
      target: gateway
      dockerfile: Dockerfile-services
    ports:
      - 8080:8080
    environment:
      DB_USERNAME: admin
      DB_PASSWORD: postgres
      DB_NAME: apigateway
      DB_PORT: 5432
    depends_on:
      db:
        condition: service_healthy

  notes_service:
    build:
      context: .
      target: notes
      dockerfile: Dockerfile-services
    ports:
      - 50053:50053
    environment:
      DB_USERNAME: admin
      DB_PASSWORD: postgres
      DB_NAME: apigateway
      DB_PORT: 5432
    depends_on:
      db:
        condition: service_healthy

  users_service:
    build:
      context: .
      target: users
      dockerfile: Dockerfile-services
    ports:
      - 50052:50052
    environment:
      DB_USERNAME: admin
      DB_PASSWORD: postgres
      DB_NAME: apigateway
      DB_PORT: 5432
    depends_on:
      db:
        condition: service_healthy

  permissions_service:
    build:
      context: .
      target: permissions
      dockerfile: Dockerfile-services
    ports:
      - 50054:50054
    environment:
      DB_USERNAME: admin
      DB_PASSWORD: postgres
      DB_NAME: apigateway
      DB_PORT: 5432
    depends_on:
      db:
        condition: service_healthy