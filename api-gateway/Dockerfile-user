# Use the official Golang image from the Docker Hub
FROM golang:alpine AS builder

# Install git and ca-certificates (needed to be able to call HTTPS)
RUN apk --update add ca-certificates

# Set the working directory inside the container
WORKDIR /app

# Copy all files and directories from the current directory on your host machine into the current directory in the Docker container
COPY . .

# Download dependencies using go mod
RUN go mod download


FROM builder AS service
# Command to run the application when starting the container
COPY --from=builder /app/ /app/
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -ldflags '-extldflags "-static"' -o main ./cmd/api/
#ENTRYPOINT ["tail"]
#CMD ["-f","/dev/null"]
CMD ["/app/main"]

FROM builder AS client
# Command to run the application when starting the container
COPY --from=builder /app/ /app/
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -ldflags '-extldflags "-static"' -o main ./cmd/api/client/
CMD ["/app/main"]
